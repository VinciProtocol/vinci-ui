/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IWPUNKSGateway, IWPUNKSGatewayInterface } from './IWPUNKSGateway'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'punkIndices',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: 'lockType',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'referralCode',
        type: 'uint16',
      },
    ],
    name: 'depositAndLockPUNKS',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'punkIndices',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: 'referralCode',
        type: 'uint16',
      },
    ],
    name: 'depositPUNKS',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lendingPool',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'punkIndices',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'withdrawPUNKS',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export class IWPUNKSGateway__factory {
  static readonly abi = _abi
  static createInterface(): IWPUNKSGatewayInterface {
    return new utils.Interface(_abi) as IWPUNKSGatewayInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IWPUNKSGateway {
    return new Contract(address, _abi, signerOrProvider) as IWPUNKSGateway
  }
}
